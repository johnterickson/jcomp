v2.0 raw
# (":main", 24)
# (":main__EPILOGUE", 80)
# # set stack to 0xff
8f # @00 LoadLo(Constant(15))
06 # @01 StoreReg(SP)
# # call main
8f # @02 LoadLo(Constant(15))
5e # @03 Add(SP)
06 # @04 StoreReg(SP)
# begin resolving macro: 'call :main'
8f # @05 LoadLo(Constant(15))
5e # @06 Add(SP)
06 # @07 StoreReg(SP)
85 # @08 LoadLo(Constant(5))
5f # @09 Add(PC)
0e # @0a StoreMem(SP)
88 # @0b LoadLo(Label(":main")) LoadLo(Constant(8))
91 # @0c LoadHi(Label(":main")) LoadHi(Constant(1))
07 # @0d StoreReg(PC)
81 # @0e LoadLo(Constant(1))
5e # @0f Add(SP)
06 # @10 StoreReg(SP)
# end resolving macro: 'call :main'
# begin resolving macro: 'pop b'
7e # @11 LoadMem(SP)
01 # @12 StoreReg(B)
81 # @13 LoadLo(Constant(1))
5e # @14 Add(SP)
06 # @15 StoreReg(SP)
# end resolving macro: 'pop b'
# begin resolving macro: 'halt'
8f # @16 LoadLo(Constant(15))
07 # @17 StoreReg(PC)
# end resolving macro: 'halt'
# # Function: main
# ":main"
# # sp+4 -> RESULT
# # sp+3 -> RETURN_ADDRESS
# # sp+2 -> saved b
# # sp+1 -> saved c
# # sp+0 -> result
# # save registers
# begin resolving macro: 'push b'
8f # @18 LoadLo(Constant(15))
5e # @19 Add(SP)
06 # @1a StoreReg(SP)
71 # @1b LoadReg(B)
0e # @1c StoreMem(SP)
# end resolving macro: 'push b'
# begin resolving macro: 'push c'
8f # @1d LoadLo(Constant(15))
5e # @1e Add(SP)
06 # @1f StoreReg(SP)
72 # @20 LoadReg(C)
0e # @21 StoreMem(SP)
# end resolving macro: 'push c'
# # create stack space
8f # @22 LoadLo(Constant(15))
5e # @23 Add(SP)
06 # @24 StoreReg(SP)
# # Assign { local: "result", value: Operation(Add, Number(1), Number(1)) }
80 # @25 LoadLo(Constant(0))
5e # @26 Add(SP)
02 # @27 StoreReg(C)
# begin resolving macro: 'push c'
8f # @28 LoadLo(Constant(15))
5e # @29 Add(SP)
06 # @2a StoreReg(SP)
72 # @2b LoadReg(C)
0e # @2c StoreMem(SP)
# end resolving macro: 'push c'
81 # @2d LoadLo(Constant(1))
90 # @2e LoadHi(Constant(0))
01 # @2f StoreReg(B)
# begin resolving macro: 'push b'
8f # @30 LoadLo(Constant(15))
5e # @31 Add(SP)
06 # @32 StoreReg(SP)
71 # @33 LoadReg(B)
0e # @34 StoreMem(SP)
# end resolving macro: 'push b'
81 # @35 LoadLo(Constant(1))
90 # @36 LoadHi(Constant(0))
01 # @37 StoreReg(B)
# begin resolving macro: 'pop c'
7e # @38 LoadMem(SP)
02 # @39 StoreReg(C)
81 # @3a LoadLo(Constant(1))
5e # @3b Add(SP)
06 # @3c StoreReg(SP)
# end resolving macro: 'pop c'
71 # @3d LoadReg(B)
59 # @3e Add(B)
01 # @3f StoreReg(B)
# begin resolving macro: 'pop c'
7e # @40 LoadMem(SP)
02 # @41 StoreReg(C)
81 # @42 LoadLo(Constant(1))
5e # @43 Add(SP)
06 # @44 StoreReg(SP)
# end resolving macro: 'pop c'
71 # @45 LoadReg(B)
0a # @46 StoreMem(C)
# # Return { local: "result" }
84 # @47 LoadLo(Constant(4))
5e # @48 Add(SP)
01 # @49 StoreReg(B)
80 # @4a LoadLo(Constant(0))
5e # @4b Add(SP)
02 # @4c StoreReg(C)
7a # @4d LoadMem(C)
09 # @4e StoreMem(B)
a1 # @4f Jmp(Label(":main__EPILOGUE")) Jmp(Constant(1))
# ":main__EPILOGUE"
81 # @50 LoadLo(Constant(1))
5e # @51 Add(SP)
06 # @52 StoreReg(SP)
# begin resolving macro: 'pop c'
7e # @53 LoadMem(SP)
02 # @54 StoreReg(C)
81 # @55 LoadLo(Constant(1))
5e # @56 Add(SP)
06 # @57 StoreReg(SP)
# end resolving macro: 'pop c'
# begin resolving macro: 'pop b'
7e # @58 LoadMem(SP)
01 # @59 StoreReg(B)
81 # @5a LoadLo(Constant(1))
5e # @5b Add(SP)
06 # @5c StoreReg(SP)
# end resolving macro: 'pop b'
# begin resolving macro: 'ret'
7e # @5d LoadMem(SP)
07 # @5e StoreReg(PC)
# end resolving macro: 'ret'
# begin simulation
# PC:00 [0, 0, 0, 0, 0, 0, 0, 0] LoadLo(Constant(15)) [255, 0, 0, 0, 0, 0, 0, 0]
# PC:01 [255, 0, 0, 0, 0, 0, 0, 1] StoreReg(SP) [255, 0, 0, 0, 0, 0, 255, 1]
# PC:02 [255, 0, 0, 0, 0, 0, 255, 2] LoadLo(Constant(15)) [255, 0, 0, 0, 0, 0, 255, 2]
# PC:03 [255, 0, 0, 0, 0, 0, 255, 3] Add(SP) [254, 0, 0, 0, 0, 1, 255, 3]
# PC:04 [254, 0, 0, 0, 0, 1, 255, 4] StoreReg(SP) [254, 0, 0, 0, 0, 1, 254, 4]
# PC:05 [254, 0, 0, 0, 0, 1, 254, 5] LoadLo(Constant(15)) [255, 0, 0, 0, 0, 1, 254, 5]
# PC:06 [255, 0, 0, 0, 0, 1, 254, 6] Add(SP) [253, 0, 0, 0, 0, 1, 254, 6]
# PC:07 [253, 0, 0, 0, 0, 1, 254, 7] StoreReg(SP) [253, 0, 0, 0, 0, 1, 253, 7]
# PC:08 [253, 0, 0, 0, 0, 1, 253, 8] LoadLo(Constant(5)) [5, 0, 0, 0, 0, 1, 253, 8]
# PC:09 [5, 0, 0, 0, 0, 1, 253, 9] Add(PC) [14, 0, 0, 0, 0, 0, 253, 9]
# PC:0a [14, 0, 0, 0, 0, 0, 253, 10] StoreMem(SP) [14, 0, 0, 0, 0, 0, 253, 10]
# PC:0b [14, 0, 0, 0, 0, 0, 253, 11] LoadLo(Constant(8)) [248, 0, 0, 0, 0, 0, 253, 11]
# PC:0c [248, 0, 0, 0, 0, 0, 253, 12] LoadHi(Constant(1)) [24, 0, 0, 0, 0, 0, 253, 12]
# PC:0d [24, 0, 0, 0, 0, 0, 253, 13] StoreReg(PC) [24, 0, 0, 0, 0, 0, 253, 24]
# PC:18 [24, 0, 0, 0, 0, 0, 253, 24] LoadLo(Constant(15)) [255, 0, 0, 0, 0, 0, 253, 24]
# PC:19 [255, 0, 0, 0, 0, 0, 253, 25] Add(SP) [252, 0, 0, 0, 0, 1, 253, 25]
# PC:1a [252, 0, 0, 0, 0, 1, 253, 26] StoreReg(SP) [252, 0, 0, 0, 0, 1, 252, 26]
# PC:1b [252, 0, 0, 0, 0, 1, 252, 27] LoadReg(B) [0, 0, 0, 0, 0, 1, 252, 27]
# PC:1c [0, 0, 0, 0, 0, 1, 252, 28] StoreMem(SP) [0, 0, 0, 0, 0, 1, 252, 28]
# PC:1d [0, 0, 0, 0, 0, 1, 252, 29] LoadLo(Constant(15)) [255, 0, 0, 0, 0, 1, 252, 29]
# PC:1e [255, 0, 0, 0, 0, 1, 252, 30] Add(SP) [251, 0, 0, 0, 0, 1, 252, 30]
# PC:1f [251, 0, 0, 0, 0, 1, 252, 31] StoreReg(SP) [251, 0, 0, 0, 0, 1, 251, 31]
# PC:20 [251, 0, 0, 0, 0, 1, 251, 32] LoadReg(C) [0, 0, 0, 0, 0, 1, 251, 32]
# PC:21 [0, 0, 0, 0, 0, 1, 251, 33] StoreMem(SP) [0, 0, 0, 0, 0, 1, 251, 33]
# PC:22 [0, 0, 0, 0, 0, 1, 251, 34] LoadLo(Constant(15)) [255, 0, 0, 0, 0, 1, 251, 34]
# PC:23 [255, 0, 0, 0, 0, 1, 251, 35] Add(SP) [250, 0, 0, 0, 0, 1, 251, 35]
# PC:24 [250, 0, 0, 0, 0, 1, 251, 36] StoreReg(SP) [250, 0, 0, 0, 0, 1, 250, 36]
# PC:25 [250, 0, 0, 0, 0, 1, 250, 37] LoadLo(Constant(0)) [0, 0, 0, 0, 0, 1, 250, 37]
# PC:26 [0, 0, 0, 0, 0, 1, 250, 38] Add(SP) [250, 0, 0, 0, 0, 0, 250, 38]
# PC:27 [250, 0, 0, 0, 0, 0, 250, 39] StoreReg(C) [250, 0, 250, 0, 0, 0, 250, 39]
# PC:28 [250, 0, 250, 0, 0, 0, 250, 40] LoadLo(Constant(15)) [255, 0, 250, 0, 0, 0, 250, 40]
# PC:29 [255, 0, 250, 0, 0, 0, 250, 41] Add(SP) [249, 0, 250, 0, 0, 1, 250, 41]
# PC:2a [249, 0, 250, 0, 0, 1, 250, 42] StoreReg(SP) [249, 0, 250, 0, 0, 1, 249, 42]
# PC:2b [249, 0, 250, 0, 0, 1, 249, 43] LoadReg(C) [250, 0, 250, 0, 0, 1, 249, 43]
# PC:2c [250, 0, 250, 0, 0, 1, 249, 44] StoreMem(SP) [250, 0, 250, 0, 0, 1, 249, 44]
# PC:2d [250, 0, 250, 0, 0, 1, 249, 45] LoadLo(Constant(1)) [1, 0, 250, 0, 0, 1, 249, 45]
# PC:2e [1, 0, 250, 0, 0, 1, 249, 46] LoadHi(Constant(0)) [1, 0, 250, 0, 0, 1, 249, 46]
# PC:2f [1, 0, 250, 0, 0, 1, 249, 47] StoreReg(B) [1, 1, 250, 0, 0, 1, 249, 47]
# PC:30 [1, 1, 250, 0, 0, 1, 249, 48] LoadLo(Constant(15)) [255, 1, 250, 0, 0, 1, 249, 48]
# PC:31 [255, 1, 250, 0, 0, 1, 249, 49] Add(SP) [248, 1, 250, 0, 0, 1, 249, 49]
# PC:32 [248, 1, 250, 0, 0, 1, 249, 50] StoreReg(SP) [248, 1, 250, 0, 0, 1, 248, 50]
# PC:33 [248, 1, 250, 0, 0, 1, 248, 51] LoadReg(B) [1, 1, 250, 0, 0, 1, 248, 51]
# PC:34 [1, 1, 250, 0, 0, 1, 248, 52] StoreMem(SP) [1, 1, 250, 0, 0, 1, 248, 52]
# PC:35 [1, 1, 250, 0, 0, 1, 248, 53] LoadLo(Constant(1)) [1, 1, 250, 0, 0, 1, 248, 53]
# PC:36 [1, 1, 250, 0, 0, 1, 248, 54] LoadHi(Constant(0)) [1, 1, 250, 0, 0, 1, 248, 54]
# PC:37 [1, 1, 250, 0, 0, 1, 248, 55] StoreReg(B) [1, 1, 250, 0, 0, 1, 248, 55]
# PC:38 [1, 1, 250, 0, 0, 1, 248, 56] LoadMem(SP) [1, 1, 250, 0, 0, 1, 248, 56]
# PC:39 [1, 1, 250, 0, 0, 1, 248, 57] StoreReg(C) [1, 1, 1, 0, 0, 1, 248, 57]
# PC:3a [1, 1, 1, 0, 0, 1, 248, 58] LoadLo(Constant(1)) [1, 1, 1, 0, 0, 1, 248, 58]
# PC:3b [1, 1, 1, 0, 0, 1, 248, 59] Add(SP) [249, 1, 1, 0, 0, 0, 248, 59]
# PC:3c [249, 1, 1, 0, 0, 0, 248, 60] StoreReg(SP) [249, 1, 1, 0, 0, 0, 249, 60]
# PC:3d [249, 1, 1, 0, 0, 0, 249, 61] LoadReg(B) [1, 1, 1, 0, 0, 0, 249, 61]
# PC:3e [1, 1, 1, 0, 0, 0, 249, 62] Add(B) [2, 1, 1, 0, 0, 0, 249, 62]
# PC:3f [2, 1, 1, 0, 0, 0, 249, 63] StoreReg(B) [2, 2, 1, 0, 0, 0, 249, 63]
# PC:40 [2, 2, 1, 0, 0, 0, 249, 64] LoadMem(SP) [250, 2, 1, 0, 0, 0, 249, 64]
# PC:41 [250, 2, 1, 0, 0, 0, 249, 65] StoreReg(C) [250, 2, 250, 0, 0, 0, 249, 65]
# PC:42 [250, 2, 250, 0, 0, 0, 249, 66] LoadLo(Constant(1)) [1, 2, 250, 0, 0, 0, 249, 66]
# PC:43 [1, 2, 250, 0, 0, 0, 249, 67] Add(SP) [250, 2, 250, 0, 0, 0, 249, 67]
# PC:44 [250, 2, 250, 0, 0, 0, 249, 68] StoreReg(SP) [250, 2, 250, 0, 0, 0, 250, 68]
# PC:45 [250, 2, 250, 0, 0, 0, 250, 69] LoadReg(B) [2, 2, 250, 0, 0, 0, 250, 69]
# PC:46 [2, 2, 250, 0, 0, 0, 250, 70] StoreMem(C) [2, 2, 250, 0, 0, 0, 250, 70]
# PC:47 [2, 2, 250, 0, 0, 0, 250, 71] LoadLo(Constant(4)) [4, 2, 250, 0, 0, 0, 250, 71]
# PC:48 [4, 2, 250, 0, 0, 0, 250, 72] Add(SP) [254, 2, 250, 0, 0, 0, 250, 72]
# PC:49 [254, 2, 250, 0, 0, 0, 250, 73] StoreReg(B) [254, 254, 250, 0, 0, 0, 250, 73]
# PC:4a [254, 254, 250, 0, 0, 0, 250, 74] LoadLo(Constant(0)) [0, 254, 250, 0, 0, 0, 250, 74]
# PC:4b [0, 254, 250, 0, 0, 0, 250, 75] Add(SP) [250, 254, 250, 0, 0, 0, 250, 75]
# PC:4c [250, 254, 250, 0, 0, 0, 250, 76] StoreReg(C) [250, 254, 250, 0, 0, 0, 250, 76]
# PC:4d [250, 254, 250, 0, 0, 0, 250, 77] LoadMem(C) [2, 254, 250, 0, 0, 0, 250, 77]
# PC:4e [2, 254, 250, 0, 0, 0, 250, 78] StoreMem(B) [2, 254, 250, 0, 0, 0, 250, 78]
# PC:4f [2, 254, 250, 0, 0, 0, 250, 79] Jmp(Constant(1)) [2, 254, 250, 0, 0, 0, 250, 80]
# PC:50 [2, 254, 250, 0, 0, 0, 250, 80] LoadLo(Constant(1)) [1, 254, 250, 0, 0, 0, 250, 80]
# PC:51 [1, 254, 250, 0, 0, 0, 250, 81] Add(SP) [251, 254, 250, 0, 0, 0, 250, 81]
# PC:52 [251, 254, 250, 0, 0, 0, 250, 82] StoreReg(SP) [251, 254, 250, 0, 0, 0, 251, 82]
# PC:53 [251, 254, 250, 0, 0, 0, 251, 83] LoadMem(SP) [0, 254, 250, 0, 0, 0, 251, 83]
# PC:54 [0, 254, 250, 0, 0, 0, 251, 84] StoreReg(C) [0, 254, 0, 0, 0, 0, 251, 84]
# PC:55 [0, 254, 0, 0, 0, 0, 251, 85] LoadLo(Constant(1)) [1, 254, 0, 0, 0, 0, 251, 85]
# PC:56 [1, 254, 0, 0, 0, 0, 251, 86] Add(SP) [252, 254, 0, 0, 0, 0, 251, 86]
# PC:57 [252, 254, 0, 0, 0, 0, 251, 87] StoreReg(SP) [252, 254, 0, 0, 0, 0, 252, 87]
# PC:58 [252, 254, 0, 0, 0, 0, 252, 88] LoadMem(SP) [0, 254, 0, 0, 0, 0, 252, 88]
# PC:59 [0, 254, 0, 0, 0, 0, 252, 89] StoreReg(B) [0, 0, 0, 0, 0, 0, 252, 89]
# PC:5a [0, 0, 0, 0, 0, 0, 252, 90] LoadLo(Constant(1)) [1, 0, 0, 0, 0, 0, 252, 90]
# PC:5b [1, 0, 0, 0, 0, 0, 252, 91] Add(SP) [253, 0, 0, 0, 0, 0, 252, 91]
# PC:5c [253, 0, 0, 0, 0, 0, 252, 92] StoreReg(SP) [253, 0, 0, 0, 0, 0, 253, 92]
# PC:5d [253, 0, 0, 0, 0, 0, 253, 93] LoadMem(SP) [14, 0, 0, 0, 0, 0, 253, 93]
# PC:5e [14, 0, 0, 0, 0, 0, 253, 94] StoreReg(PC) [14, 0, 0, 0, 0, 0, 253, 14]
# PC:0e [14, 0, 0, 0, 0, 0, 253, 14] LoadLo(Constant(1)) [1, 0, 0, 0, 0, 0, 253, 14]
# PC:0f [1, 0, 0, 0, 0, 0, 253, 15] Add(SP) [254, 0, 0, 0, 0, 0, 253, 15]
# PC:10 [254, 0, 0, 0, 0, 0, 253, 16] StoreReg(SP) [254, 0, 0, 0, 0, 0, 254, 16]
# PC:11 [254, 0, 0, 0, 0, 0, 254, 17] LoadMem(SP) [2, 0, 0, 0, 0, 0, 254, 17]
# PC:12 [2, 0, 0, 0, 0, 0, 254, 18] StoreReg(B) [2, 2, 0, 0, 0, 0, 254, 18]
# PC:13 [2, 2, 0, 0, 0, 0, 254, 19] LoadLo(Constant(1)) [1, 2, 0, 0, 0, 0, 254, 19]
# PC:14 [1, 2, 0, 0, 0, 0, 254, 20] Add(SP) [255, 2, 0, 0, 0, 0, 254, 20]
# PC:15 [255, 2, 0, 0, 0, 0, 254, 21] StoreReg(SP) [255, 2, 0, 0, 0, 0, 255, 21]
# PC:16 [255, 2, 0, 0, 0, 0, 255, 22] LoadLo(Constant(15)) [255, 2, 0, 0, 0, 0, 255, 22]
# PC:17 [255, 2, 0, 0, 0, 0, 255, 23] StoreReg(PC) [255, 2, 0, 0, 0, 0, 255, 255]
# simulation completed
