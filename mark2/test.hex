v2.0 raw
# (":success", 13)
# (":test1", 2)
# (":test2", 13)
# # set up stack pointer
8f # @00 LoadLo(Constant(15))
06 # @01 StoreReg(SP)
# ":test1"
# # store a value to memory
81 # @02 LoadLo(Constant(1))
09 # @03 StoreMem(B)
# # clear
40 # @04 Xor(ACC)
# # retrieve it
79 # @05 LoadMem(B)
02 # @06 StoreReg(C)
8f # @07 LoadLo(Constant(15))
5a # @08 Add(C)
c4 # @09 Jz(Label(":test2")) Jz(Constant(4))
81 # @0a LoadLo(Constant(1))
# begin resolving macro: 'halt'
8f # @0b LoadLo(Constant(15))
07 # @0c StoreReg(PC)
# end resolving macro: 'halt'
# ":test2"
# # todo
# 
# ":success"
# begin resolving macro: 'halt'
8f # @0d LoadLo(Constant(15))
07 # @0e StoreReg(PC)
# end resolving macro: 'halt'
# begin simulation
# PC:00 [0, 0, 0, 0, 0, 0, 0, 0] LoadLo(Constant(15)) [255, 0, 0, 0, 0, 0, 0, 0]
# PC:01 [255, 0, 0, 0, 0, 0, 0, 1] StoreReg(SP) [255, 0, 0, 0, 0, 0, 255, 1]
# PC:02 [255, 0, 0, 0, 0, 0, 255, 2] LoadLo(Constant(1)) [1, 0, 0, 0, 0, 0, 255, 2]
# PC:03 [1, 0, 0, 0, 0, 0, 255, 3] StoreMem(B) [1, 0, 0, 0, 0, 0, 255, 3]
# PC:04 [1, 0, 0, 0, 0, 0, 255, 4] Xor(ACC) [0, 0, 0, 0, 0, 0, 255, 4]
# PC:05 [0, 0, 0, 0, 0, 0, 255, 5] LoadMem(B) [1, 0, 0, 0, 0, 0, 255, 5]
# PC:06 [1, 0, 0, 0, 0, 0, 255, 6] StoreReg(C) [1, 0, 1, 0, 0, 0, 255, 6]
# PC:07 [1, 0, 1, 0, 0, 0, 255, 7] LoadLo(Constant(15)) [255, 0, 1, 0, 0, 0, 255, 7]
# PC:08 [255, 0, 1, 0, 0, 0, 255, 8] Add(C) [0, 0, 1, 0, 0, 1, 255, 8]
# PC:09 [0, 0, 1, 0, 0, 1, 255, 9] Jz(Constant(4)) [0, 0, 1, 0, 0, 1, 255, 13]
# PC:0d [0, 0, 1, 0, 0, 1, 255, 13] LoadLo(Constant(15)) [255, 0, 1, 0, 0, 1, 255, 13]
# PC:0e [255, 0, 1, 0, 0, 1, 255, 14] StoreReg(PC) [255, 0, 1, 0, 0, 1, 255, 255]
# simulation completed
